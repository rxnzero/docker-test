<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="Menu">
	
<!-- 	SELECT level - 1 "level" -->
<!-- 		     , T01.MENUID "id" -->
<!-- 		     , T01.PARENTMENUID "parent" -->
<!--              , 'true' "expanded" -->
<!--              , DECODE(CONNECT_BY_ISLEAF,1,'true','false') "isLeaf" -->
<!-- 		     , T01.MENUID -->
<!-- 		     , T01.PARENTMENUID  -->
<!-- 		     , T01.SORTORDER -->
<!-- 		     , T01.MENUNAME -->
<!-- 		     , T01.MENUURL -->
<!-- 		     , T01.MENUIMAGE -->
<!-- 		     , T01.DISPLAYYN -->
<!-- 		     , T01.USEYN -->
<!-- 		     , T01.APPPATH -->
<!-- 		     , T01.APPCODE -->
<!-- 		  FROM $schemaId$.TSEAIRM01 T01 -->
<!-- 		  <dynamic prepend="WHERE"> -->
<!-- 				<isNotEmpty prepend="AND" property="searchName"> -->
<!-- 				MENUID in (select MENUID -->
<!--                     from $schemaId$.TSEAIRM01 -->
<!--                     connect by prior PARENTMENUID = MENUID -->
<!--                     start with MENUID in (select MENUID from $schemaId$.tseairm01 where MenuName like '%'||#searchName#||'%') -->
<!--              	) -->
<!-- 				</isNotEmpty>		  	 -->
<!-- 		  </dynamic> -->
<!-- 	    connect by prior MENUID  = PARENTMENUID  -->
<!-- 		start with PARENTMENUID = 'ROOT_DEV' -->
<!--            order siblings by sortOrder -->
    <!--  MenuServiceImpl compute level -->       
	<statement id="selectTree" resultClass="java.util.HashMap">
	    WITH RECURSIVE tree_menu AS (                            
		    SELECT 0 as LEVEL
				 , ARRAY[CAST(t1.MENUID AS INTEGER)] as PATH
				 , false as CYCLE
				 , t1.MENUID        
				 , t1.PARENTMENUID   
				 , t1.SORTORDER      
				 , t1.MENUNAME      
				 , t1.MENUURL        
				 , t1.MENUIMAGE     
				 , t1.DISPLAYYN       
				 , t1.USEYN   
				 , t1.APPPATH  
				 , t1.APPCODE
              FROM $schemaId$.TSEAIRM01 AS T1
		     WHERE PARENTMENUID = 'ROOT_DEV'
			UNION ALL
			SELECT LEVEL+1
			 	 , PATH || CAST(t2.MENUID AS INTEGER) 
				 , CAST(t2.MENUID AS INTEGER) = ANY(PATH)
				 , t2.MENUID
				 , t2.PARENTMENUID
				 , t2.SORTORDER
				 , t2.MENUNAME
				 , t2.MENUURL
				 , t2.MENUIMAGE
				 , t2.DISPLAYYN
				 , t2.USEYN
				 , t2.APPPATH
			 	 , t2.APPCODE
			  FROM $schemaId$.TSEAIRM01 AS T2, tree_menu AS TT
			 WHERE T2.PARENTMENUID = TT.MENUID 
			   AND NOT CYCLE)
		SELECT 0 "level"
             , T01.MENUID "id"
             , T01.PARENTMENUID "parent"   
             , 'true' AS "expanded"
             , CASE (select count(MENUID) from $schemaId$.TSEAIRM01 where PARENTMENUID = T01.MENUID) WHEN 0 then 'true' ELSE 'false' END AS "isLeaf"
			 , T01.MENUID       AS "MENUID"
             , T01.PARENTMENUID AS "PARENTMENUID"
             , T01.SORTORDER    AS "SORTORDER"
             , T01.MENUNAME     AS "MENUNAME"
             , T01.MENUURL      AS "MENUURL"
             , T01.MENUIMAGE    AS "MENUIMAGE"
             , T01.DISPLAYYN    AS "DISPLAYYN"
             , T01.USEYN        AS "USEYN"
             , T01.APPPATH      AS "APPPATH"
             , T01.APPCODE      AS "APPCODE"
		  FROM TREE_MENU AS T01
		  <dynamic prepend="WHERE">
				<isNotEmpty prepend="AND" property="searchName">
                   CAST(T01.MENUID AS INTEGER) in ( select distinct unnest(PATH) from tree_menu where menuname like '%'||#searchName#||'%' )
				</isNotEmpty>		  	
		  </dynamic>
           order by PATH
	</statement>
	
	<statement id="update" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 	UPDATE 	$schemaId$.TSEAIRM01 SET 
	 			PARENTMENUID = #parentMenuId#, 
	 		<isNotEmpty property="menuImg">
	 			MENUIMAGE = #menuImage:VARCHAR#,
	 		</isNotEmpty>
	 			SORTORDER = CAST(#sortOrder# AS INTEGER), MENUNAME = #menuName#,
	 			MenuURL = #menuUrl#, DISPLAYYN = #displayYn#,
	 		<isNotEmpty property="appPath">	
	 			APPPATH = #appPath#,
	 		</isNotEmpty>	
	 		<isNotEmpty property="appCode">	
	 			APPCODE = #appCode#,
	 		</isNotEmpty>	
	 			USEYN = #useYn#
	 	WHERE 	MENUID = #menuId#
	</statement>
	
	<statement id="insert" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		INSERT 	INTO $schemaId$.TSEAIRM01(
				MENUID, PARENTMENUID, SORTORDER, 
				MENUNAME, MenuURL, 
				<isNotEmpty property="menuImage">
				MENUIMAGE, 
				</isNotEmpty>
				DISPLAYYN, USEYN
				<isNotEmpty property="appPath">
				,APPPATH
				</isNotEmpty>
				<isNotEmpty property="appCode">
				,APPCODE
				</isNotEmpty>
				)
		VALUES	(#menuId#, #parentMenuId#, CAST(#sortOrder# AS INTEGER), 
				#menuName#, #menuUrl#, 
				<isNotEmpty property="menuImage">
				#menuImage#, 
				</isNotEmpty>
				#displayYn#, #useYn#
				<isNotEmpty property="appPath">
				, #appPath#
				</isNotEmpty>
				<isNotEmpty property="appCode">
				, #appCode#
				</isNotEmpty>
				)		
	</statement>
	    <statement id="delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			DELETE FROM $schemaId$.tseairm01 WHERE $schemaId$.tseairm01.menuid IN ( WITH RECURSIVE tmp_tree AS (
					SELECT $schemaId$.tseairm01.menuid, $schemaId$.tseairm01.parentmenuid, $schemaId$.tseairm01.menuname, 1 AS LEVEL FROM $schemaId$.tseairm01
						WHERE $schemaId$.tseairm01.menuid = #menuId#
					UNION
						SELECT p.menuid, p.parentmenuid, p.menuname, 1 AS LEVEL FROM $schemaId$.tseairm01 AS p
							INNER JOIN tmp_tree ON tmp_tree.menuid = p.parentmenuid 
				) SELECT tmp_tree.menuid from tmp_tree);
    </statement>
</sqlMap>
